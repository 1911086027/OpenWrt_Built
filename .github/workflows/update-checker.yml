#
# https://github.com/P3TERX/Actions-OpenWrt
#
# File: .github/workflows/update-checker.yml
# Description: Source code update checker
#
# Copyright (c) 2019-2024 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#

name: Update Checker

on:
  repository_dispatch:
    types: [schedule]
  workflow_dispatch:
    inputs:
      source_branch:
        description: "Select source branch"
        required: true
        default: "immortalwrt"
        type: choice
        options:
          - openwrt
          - lede
          - immortalwrt
          - Lienol
      openwrt_board:
        description: "Select device board"
        required: true
        default: "s905d"
        type: choice
        options:
          - all
          #Cortex-A53
          - s905d
          - rk3328
          - h6
      openwrt_kernel:
        description: "Select kernel version"
        required: true
        default: "5.10.y_5.15.y"
        type: choice
        options:
          - 5.4.y
          - 5.10.y
          - 5.15.y
          - 6.1.y
          - 6.6.y
          - 5.10.y_5.15.y
          - 6.1.y_6.6.y
      docker_img:
        description: "Set the docker image"
        required: true
        default: "1911086027/openwrt_cortex-a53:immortalwrt"
        type: choice
        options:
          - 1911086027/openwrt_cortex-a53:openwrt
          - 1911086027/openwrt_cortex-a53:lede
          - 1911086027/openwrt_cortex-a53:immortalwrt
          - 1911086027/openwrt_cortex-a53:Lienol
jobs:
  check:
    runs-on: ubuntu-latest
    
    steps:
    - name: Get Commit Hash
      id: getHash
      run: |
        if [[ "${{ github.event.inputs.source_branch }}" == *"openwrt"* || "${{ github.event.client_payload.source_branch }}" == *"openwrt"* ]]; then
            REPO_URL="https://github.com/openwrt/openwrt"
            REPO_BRANCH="openwrt-23.05"
            echo "TAGS_NAME=official" >> ${GITHUB_OUTPUT}
        elif [[ "${{ github.event.inputs.source_branch }}" == *"lede"* || "${{ github.event.client_payload.source_branch }}" == *"lede"* ]]; then
            REPO_URL="https://github.com/coolsnowwolf/lede"
            REPO_BRANCH="master"
            echo "TAGS_NAME=lede" >> ${GITHUB_OUTPUT}
        elif [[ "${{ github.event.inputs.source_branch }}" == *"immortalwrt"* || "${{ github.event.client_payload.source_branch }}" == *"immortalwrt"* ]]; then
            REPO_URL="https://github.com/immortalwrt/immortalwrt"
            REPO_BRANCH="openwrt-23.05"
            echo "TAGS_NAME=immortalwrt" >> ${GITHUB_OUTPUT}
        elif [[ "${{ github.event.inputs.source_branch }}" == *"Lienol"* || "${{ github.event.client_payload.source_branch }}" == *"Lienol"* ]]; then
            REPO_URL="https://github.com/Lienol/openwrt"
            REPO_BRANCH="23.05"
            echo "TAGS_NAME=Lienol" >> ${GITHUB_OUTPUT}
        else
            echo "Unknown source code repository."
            exit 1
        fi
        git clone -q --single-branch --depth=1 --branch=${REPO_BRANCH} ${REPO_URL}
        echo "commitHash=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

    - name: Compare Commit Hash
      id: cacheHash
      uses: actions/cache@v4
      with:
        path: .commitHash_${{ steps.getHash.outputs.TAGS_NAME }}
        key: commitHash_${{ steps.getHash.outputs.commitHash }}

    - name: Save New Commit Hash
      if: steps.cacheHash.outputs.cache-hit != 'true'
      run: |
        echo ${{ steps.getHash.outputs.commitHash }} | tee .commitHash_${{ steps.getHash.outputs.TAGS_NAME }}
        ls -a
        
    outputs:
      cache-hit: ${{ steps.cacheHash.outputs.cache-hit }}

  call:
    needs: check
    name: Call OpenWrt Builder
    if:  ${{ needs.check.outputs['check.cache-hit'] != 'true' }}
    uses: ./.github/workflows/openwrt-builder.yml
    with:
#      source_branch: ${{ github.event_name == 'repository_dispatch' && github.event.client_payload.source_branch || github.event.inputs.source_branch }}
 #     openwrt_board: ${{ github.event_name == 'repository_dispatch' && github.event.client_payload.openwrt_board || github.event.inputs.openwrt_board }}
 #     openwrt_kernel: ${{ github.event_name == 'repository_dispatch' && github.event.client_payload.openwrt_kernel || github.event.inputs.openwrt_kernel }}
 #     docker_img: ${{ github.event_name == 'repository_dispatch' && github.event.client_payload.docker_img || github.event.inputs.docker_img }}
      source_branch: "${{ github.event.client_payload.source_branch }}"
      openwrt_board: "${{ github.event.client_payload.openwrt_board }}"
      openwrt_kernel: "${{ github.event.client_payload.openwrt_kernel }}"
      docker_img: "${{ github.event.client_payload.docker_img }}"