#============================================================================================
# https://github.com/ophub/amlogic-s9xxx-openwrt
# Description: Build OpenWrt
#============================================================================================

name: OpenWrt Builder

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      source_branch:
        description: "Select source branch"
        required: false
        default: "immortalwrt"
        type: choice
        options:
          - openwrt
          - lede
          - immortalwrt
          - Lienol
      openwrt_board:
        description: "Select device board"
        required: false
        default: "s905d"
        type: choice
        options:
          - all
          - a311d	
          - s922x	
          - s905x3	
          - s905x2	
          - s912	
          - s905d
          - s905x
          - s905w	
          - s905mb
          - s905l	
          - s905l2
          - s905l3
          - s905l3a
          - s905l3b
          - s905lb
          - s905
          - rk3588
          - rk3568
          - rk3566
          - rk3528	
          - rk3399
          - rk3328	
          - rk3318
          - h6
      openwrt_kernel:
        description: "Select kernel version"
        required: false
        default: "5.10.y_5.15.y"
        type: choice
        options:
          - 5.4.y
          - 5.10.y
          - 5.15.y
          - 6.1.y
          - 6.6.y
          - 5.10.y_5.15.y
          - 6.1.y_6.6.y
      docker_img:
        description: "Set the docker image"
        required: false
        default: "1911086027/openwrt-aarch64:latest"
        type: choice
        options:
          - 1911086027/openwrt-aarch64:latest
          
env:
  FEEDS_CONF: configs/${{ inputs.source_branch }}/feeds.conf.default
  CONFIGS: configs/${{ inputs.source_branch }}/config
  FILES: configs/${{ inputs.source_branch }}/files
  MAKE_DOCKER_SH: docker/make_docker_image.sh
  DIY_P1_SH: scripts/diy-part1.sh
  DIY_P2_SH: scripts/diy-part2.sh
  DOCKER_OUTPATH: out
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04
    if: ${{ github.event.repository.owner.id }} == ${{ github.event.sender.id }}

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Create simulated physical disk
      run: |
        mnt_size=$(expr $(df -h /mnt | tail -1 | awk '{print $4}' | sed 's/[[:alpha:]]//g' | sed 's/\..*//') - 1)
        root_size=$(expr $(df -h / | tail -1 | awk '{print $4}' | sed 's/[[:alpha:]]//g' | sed 's/\..*//') - 4)
        sudo truncate -s "${mnt_size}"G /mnt/mnt.img
        sudo truncate -s "${root_size}"G /root.img
        sudo losetup /dev/loop6 /mnt/mnt.img
        sudo losetup /dev/loop7 /root.img
        sudo pvcreate /dev/loop6
        sudo pvcreate /dev/loop7
        sudo vgcreate github /dev/loop6 /dev/loop7
        sudo lvcreate -n runner -l 100%FREE github
        sudo mkfs.xfs /dev/github/runner
        sudo mkdir -p /builder
        sudo mount /dev/github/runner /builder
        sudo chown -R runner.runner /builder
        ln -sf /builder ${GITHUB_WORKSPACE}
        df -hT
  
    - name: Clone source code [ ${{ inputs.source_branch }} ]
      id: codes
      run: |
        df -hT $PWD
        if [[ "${{ inputs.source_branch }}" == *"openwrt"* ]]; then
            REPO_URL="https://github.com/openwrt/openwrt"
            REPO_BRANCH="openwrt-23.05"
            TAGS_NAME="official"
        elif [[ "${{ inputs.source_branch }}" == *"lede"* ]]; then
            REPO_URL="https://github.com/coolsnowwolf/lede"
            REPO_BRANCH="master"
            TAGS_NAME="lede"
        elif [[ "${{ inputs.source_branch }}" == *"immortalwrt"* ]]; then
            REPO_URL="https://github.com/immortalwrt/immortalwrt"
            REPO_BRANCH="openwrt-23.05"
            TAGS_NAME="immortalwrt"
        elif [[ "${{ inputs.source_branch }}" == *"Lienol"* ]]; then
            REPO_URL="https://github.com/Lienol/openwrt"
            REPO_BRANCH="23.05"
            TAGS_NAME="Lienol"
        else
            echo "Unknown source code repository."
            exit 1
        fi
        git clone -q --single-branch --depth=1 --branch=${REPO_BRANCH} ${REPO_URL} openwrt
        echo "build_tag=OpenWrt_${TAGS_NAME}_$(date +"%Y.%m")" >> ${GITHUB_OUTPUT}
        ls -a

    - name: Cache
      uses: stupidloud/cachewrtbuild@main
      with:
        ccache: 'true'
        prefix: ${GITHUB_WORKSPACE}/openwrt
    
    - name: Load custom feeds
      run: |
        [[ -f "${FEEDS_CONF}" ]] && cp -f ${FEEDS_CONF} openwrt/feeds.conf.default
        chmod +x ${DIY_P1_SH}
        cd openwrt
        ${GITHUB_WORKSPACE}/${DIY_P1_SH}

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        [[ -e "${FILES}" ]] && mv -f ${FILES} openwrt/files
        [[ -e "${CONFIGS}" ]] && cp -f ${CONFIGS} openwrt/.config
        chmod +x ${DIY_P2_SH}
        cd openwrt
        ${GITHUB_WORKSPACE}${DIY_P2_SH}

    - name: Download package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the OpenWrt
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) V=s || make -j1 V=s
        df -hT
        echo "status=success" >> ${GITHUB_OUTPUT}
        
    - name: Clear server space
      id: clean
      if: ${{ steps.compile.outputs.status }} == 'success' && !cancelled()
      run: |
        cd openwrt
        [[ -d "output" ]] || mkdir output
        cp -f bin/targets/*/*/*rootfs.tar.gz output/
        cp -f .config output/config
        rm -rf $(ls . | grep -v "^output$" | xargs) 2>/dev/null
        cd output
        for file in *; do [[ ! -d "${file}" ]] && sha256sum "${file}" >"${file}.sha"; done
        echo "status=success" >> ${GITHUB_OUTPUT}

    - name: Upload OpenWrt to Release
      uses: ncipollo/release-action@main
      if: ${{ steps.clean.outputs.status }} == 'success' && !cancelled()
      with:
        tag: ${{ steps.codes.outputs.build_tag }}
        artifacts: openwrt/output/*
        allowUpdates: true
        removeArtifacts: false
        replacesArtifacts: true
        token: ${{ secrets.PAT }}

    - name: Packaging OpenWrt
      uses: ophub/amlogic-s9xxx-openwrt@main
      if: ${{ steps.clean.outputs.status }} == 'success' && !cancelled()
      with:
        openwrt_path: openwrt/output/*rootfs.tar.gz
        openwrt_board: ${{ inputs.openwrt_board }}
        openwrt_kernel: ${{ inputs.openwrt_kernel }}
      
    - name: Upload the packaged OpenWrt
      uses: ncipollo/release-action@main
      if: ${{ env.PACKAGED_STATUS }} == 'success' && !cancelled()
      with:
        tag: ${{ steps.codes.outputs.build_tag }}
        artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/*
        allowUpdates: true
        removeArtifacts: false
        replacesArtifacts: true
        token: ${{ secrets.PAT }}

